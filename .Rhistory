head(activity)
activityFull[naFilter, 2] <- activityFull[naFilter, 4]
activityFull <- activityFull[with(activityFull, order(date, interval)), c(2, 3, 1)]
head(activityFull)
activityFull <- activityFull[with(activityFull, order(date, interval)), c(2, 3, 1)]
head(activityFull)
avgSteps$interval <- row.names(avgSteps)
activityFull <- merge(activity, avgSteps,
by = "interval",
all.x = TRUE)
naFilter <- is.na(activityFull$steps)
head(activityFull)
head(activity)
activityFull[naFilter, 2] <- activityFull[naFilter, 4]
activityFull <- activityFull[with(activityFull, order(date, interval)), c(2, 3, 1)]
avgStepsFull <- data.frame(sumOfSteps = with(activityFull, tapply(steps, date, sum)))
head(activityFull)
with(avgStepsFull, hist(sumOfSteps))
?hist
head(sumStepsFull)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache=TRUE)
if (!file.exists("./data")) {
dir.create("./data")
}
unzippedFile <- unzip("activity.zip", exdir = "./data")
activity <- read.csv(unzippedFile, header = TRUE, sep = ",", stringsAsFactors =
FALSE, na.strings = "NA", dec = ".")
# head(activity)
# str(activity)
sumSteps <- data.frame(sumOfSteps = with(activity, tapply(steps, date, sum, na.rm = TRUE)))
with(sumSteps, hist(sumOfSteps,
main = "Histogram of Total Number of Steps Taken Per Day (Unimputed)"))
meanTotalSteps <- mean(sumSteps[[1]])
medianTotalSteps <- median(sumSteps[[1]])
library(ggplot2)
timeHHMM_formatter <- function(x){
h <- x %/% 100
m <- x %% 100
lab <- sprintf("%02d:%02d", h, m)
}
avgSteps <- data.frame(avgOfSteps = with(activity, tapply(steps, interval, mean, na.rm = TRUE)))
ggplot(data = avgSteps, aes(x = as.numeric(row.names(avgSteps)),
y = avgSteps[[1]])) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
maxStepsInterval <- timeHHMM_formatter(as.numeric(row.names(avgSteps)[which.max(avgSteps[[1]])]))
numMissing <- sum(is.na(activity$steps))
avgSteps$interval <- row.names(avgSteps)
activityFull <- merge(activity, avgSteps,
by = "interval",
all.x = TRUE)
naFilter <- is.na(activityFull$steps)
head(activityFull)
head(activity)
activityFull[naFilter, 2] <- activityFull[naFilter, 4]
activityFull <- activityFull[with(activityFull, order(date, interval)), c(2, 3, 1)]
sumStepsFull <- data.frame(sumOfSteps = with(activityFull, tapply(steps, date, sum)))
with(sumStepsFull, hist(sumOfSteps,
main = "Histogram of Total Number of Steps Taken Per Day (Imputed)"))
head(sumStepsFull)
# head(avgSteps[, 4])
#
# activityFull <- merge(activity, avgSteps,
#                       by = "interval",
#                       all.x = TRUE,
#                       all.y = FALSE,
#                       sort = FALSE)
#
# naFilter <- is.na(activityFull$steps)
# activityFull[naFilter, 2] <- activityFull[naFilter, 4]
# activityFull <- activityFull[with(activityFull, order(date, interval)), c(2, 3, 1)]
#
# sumStepsFull <- data.frame(sumOfSteps = with(activityFull, tapply(steps, date, sum)))
#
# cbind(sumSteps[[1]], sumStepsFull[[1]])
# head(activityFull)
#
# sumStepsFull <- data.frame(sumOfSteps = with(activityFull, tapply(steps, date, sum)))
# sumStepsFull
# sumStepsFull <- data.frame(sumOfSteps = with(activityFull, tapply(steps, date, sum)))
#
# with(sumStepsFull, hist(sumOfSteps))
#
#
# meanTotalStepsFull <- mean(sumStepsFull[[1]])
# medianTotalStepsFull <- median(sumStepsFull[[1]])
# meanTotalStepsFull
head(sumSteps)
str(sumStepsFull)
typeof(sumStepsFull)
sumStepsFull[1]
typeof(sumStepsFull[1])
typeof(sumStepsFull[[1]])
sumStepsFull[[1]]
meanTotalStepsFull <- mean(sumStepsFull)
meanTotalStepsFull <- mean(sumStepsFull[[1]])
medianTotalStepsFull <- median(sumStepsFull[[1]])
meanTotalSteps
meanTotalStepsFull
medianTotalSteps
medianTotalStepsFull
?scipen
??scipen
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache=TRUE)
options(scipen = 999, digits = 2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache=TRUE)
options(scipen = 999, digits = 2)
if (!file.exists("./data")) {
dir.create("./data")
}
unzippedFile <- unzip("activity.zip", exdir = "./data")
activity <- read.csv(unzippedFile, header = TRUE, sep = ",", stringsAsFactors =
FALSE, na.strings = "NA", dec = ".")
sumSteps <- data.frame(sumOfSteps = with(activity, tapply(steps, date, sum)))
with(sumSteps, hist(sumOfSteps,
main = "Histogram of Total Number of Steps Taken Per Day (Unimputed)"))
meanTotalSteps <- mean(sumSteps[[1]], na.rm = TRUE)
medianTotalSteps <- median(sumSteps[[1]], na.rm = TRUE)
library(ggplot2)
timeHHMM_formatter <- function(x){
h <- x %/% 100
m <- x %% 100
lab <- sprintf("%02d:%02d", h, m)
}
avgSteps <- data.frame(avgOfSteps = with(activity, tapply(steps, interval, mean, na.rm = TRUE)))
ggplot(data = avgSteps, aes(x = as.numeric(row.names(avgSteps)),
y = avgSteps[[1]])) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
maxStepsInterval <- timeHHMM_formatter(as.numeric(row.names(avgSteps)[which.max(avgSteps[[1]])]))
numMissing <- sum(is.na(activity$steps))
avgSteps$interval <- row.names(avgSteps)
activityFull <- merge(activity, avgSteps,
by = "interval",
all.x = TRUE)
naFilter <- is.na(activityFull$steps)
head(activityFull)
head(activity)
activityFull[naFilter, 2] <- activityFull[naFilter, 4]
activityFull <- activityFull[with(activityFull, order(date, interval)), c(2, 3, 1)]
sumStepsFull <- data.frame(sumOfSteps = with(activityFull, tapply(steps, date, sum)))
with(sumStepsFull, hist(sumOfSteps,
main = "Histogram of Total Number of Steps Taken Per Day (Imputed)"))
meanTotalStepsFull <- mean(sumStepsFull[[1]])
medianTotalStepsFull <- median(sumStepsFull[[1]])
?weekdays
head(activityFull)
sum(is.na(activityFull$date))
weekdays(activityFull$date)
str(activityFull$date)
as.Date(activityFull$date)
str(as.Date(activityFull$date))
weekdays(as.Date(activityFull$date))
weekdays(as.Date(activityFull$date), abbreviate = TRUE)
unique(weekdays(as.Date(activityFull$date), abbreviate = TRUE)))
unique(weekdays(as.Date(activityFull$date), abbreviate = TRUE))
activityFull$DayOfWeek <- weekdays(as.Date(activityFull$date), abbreviate = TRUE)
dayOfWeekLabels <- unique(activityFull$DayOfWeek)
dayOfWeekLabels
weekdayLabels <- dayOfWeekLabels[1:5]
weekendLabels <- dayOfWeekLabels[6:7]
activityFull$Weekday <- activityFull$DayOfWeek %in% weekdayLabels
head(activityFull)
head(activityFull[, 4:5])
unique(activityFull[, 4:5])
?factor
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache=TRUE)
options(scipen = 999, digits = 2)
if (!file.exists("./data")) {
dir.create("./data")
}
unzippedFile <- unzip("activity.zip", exdir = "./data")
activity <- read.csv(unzippedFile, header = TRUE, sep = ",", stringsAsFactors =
FALSE, na.strings = "NA", dec = ".")
sumSteps <- data.frame(sumOfSteps = with(activity, tapply(steps, date, sum)))
with(sumSteps, hist(sumOfSteps,
main = "Histogram of Total Number of Steps Taken Per Day (Unimputed)"))
meanTotalSteps <- mean(sumSteps[[1]], na.rm = TRUE)
medianTotalSteps <- median(sumSteps[[1]], na.rm = TRUE)
library(ggplot2)
timeHHMM_formatter <- function(x){
h <- x %/% 100
m <- x %% 100
lab <- sprintf("%02d:%02d", h, m)
}
avgSteps <- data.frame(avgOfSteps = with(activity, tapply(steps, interval, mean, na.rm = TRUE)))
ggplot(data = avgSteps, aes(x = as.numeric(row.names(avgSteps)),
y = avgSteps[[1]])) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
maxStepsInterval <- timeHHMM_formatter(as.numeric(row.names(avgSteps)[which.max(avgSteps[[1]])]))
numMissing <- sum(is.na(activity$steps))
avgSteps$interval <- row.names(avgSteps)
activityFull <- merge(activity, avgSteps,
by = "interval",
all.x = TRUE)
naFilter <- is.na(activityFull$steps)
head(activityFull)
head(activity)
activityFull[naFilter, 2] <- activityFull[naFilter, 4]
activityFull <- activityFull[with(activityFull, order(date, interval)), c(2, 3, 1)]
sumStepsFull <- data.frame(sumOfSteps = with(activityFull, tapply(steps, date, sum)))
with(sumStepsFull, hist(sumOfSteps,
main = "Histogram of Total Number of Steps Taken Per Day (Imputed)"))
meanTotalStepsFull <- mean(sumStepsFull[[1]])
medianTotalStepsFull <- median(sumStepsFull[[1]])
?weekdays
activityFull$DayOfWeek <- weekdays(as.Date(activityFull$date), abbreviate = TRUE)
dayOfWeekLabels <- unique(activityFull$DayOfWeek)
weekdayLabels <- dayOfWeekLabels[1:5]
weekendLabels <- dayOfWeekLabels[6:7]
# activityFull$Weekday <- activityFull$DayOfWeek %in% weekdayLabels
?factor
activityFull$Weekday <- activityFull$DayOfWeek %in% weekdayLabels
factor(activityFull$Weekday)
as.factor(activityFull$Weekday)
as.factor(activityFull$Weekday, labels = c("weekday", "weekend")
as.factor(activityFull$Weekday, labels = c("weekday", "weekend"))
factor(activityFull$Weekday, labels = c("weekday", "weekend"))
activityFull$WeekdayFactor <- factor(activityFull$Weekday, labels = c("weekday", "weekend"))
str(activityFull)
activityFull$WeekdayFactor <- factor(activityFull$Weekday, labels = c("weekend", "weekday"))
str(activityFull)
unique(activityFull[, 4:6])
avgStepsFull <- data.frame(avgOfSteps = with(activityFull, tapply(steps, interval, mean)))
avgStepsFull <- data.frame(avgOfSteps = with(activityFull, tapply(steps, interval, mean)))
ggplot(data = avgStepsFull, aes(x = as.numeric(row.names(avgStepsFull)),
y = avgStepsFull[[1]])) +
geom_line() +
facet_grid(rows = vars(WeekdayFactor))
avgStepsFull <- data.frame(avgOfSteps = with(activityFull, tapply(steps, interval, mean)))
ggplot(data = avgStepsFull, aes(x = as.numeric(row.names(avgStepsFull)),
y = avgStepsFull[[1]])) +
geom_line() +
facet_grid(rows = vars(WeekdayFactor)) +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
avgStepsFull <- data.frame(avgOfSteps = with(activityFull, tapply(steps, interval, mean)))
head(avgStepsFull)
head(row.names(avgStepsFull))
row.names(avgStepsFull)
ggplot(data = avgStepsFull, aes(x = as.numeric(row.names(avgStepsFull)),
y = avgStepsFull[[1]])) +
geom_line() +
facet_grid(rows = vars(WeekdayFactor)) +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
ggplot(data = avgStepsFull, aes(x = as.numeric(row.names(avgStepsFull)),
y = avgStepsFull[[1]])) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
vars(activityFull$WeekdayFactor)
??vars
library(dplyr)
vars(activityFull$WeekdayFactor)
vars(activityFull$WeekdayFactor)[[1]]
ggplot(data = avgStepsFull, aes(x = as.numeric(row.names(avgStepsFull)),
y = avgStepsFull[[1]])) +
geom_line() +
facet_grid(rows = vars(WeekdayFactor)) +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
ggplot(data = avgStepsFull, aes(x = as.numeric(row.names(avgStepsFull)),
y = avgStepsFull[[1]])) +
geom_line() +
facet_grid(vars(WeekdayFactor)) +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
ggplot(data = avgStepsFull, aes(x = as.numeric(row.names(avgStepsFull)),
y = avgStepsFull[[1]])) +
geom_line() +
facet_grid(WeekdayFactor ~.) +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
avgStepsFull <- data.frame(avgOfSteps = with(activityFull, tapply(steps, interval, mean)))
ggplot(data = avgStepsFull, aes(x = as.numeric(row.names(avgStepsFull)),
y = avgStepsFull[[1]])) +
geom_line() +
facet_grid(.~ WeekdayFactor) +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
avgStepsFull <- data.frame(avgOfSteps = with(activityFull, tapply(steps, interval, mean)))
str(avgStepsFull)
avgStepsFull <- data.frame(avgOfSteps = with(activityFull, tapply(steps, list(interval, WeekdayFactor), mean)))
str(avgStepsFull)
melt(avgStepsFull)
library(reshape2)
melt(avgStepsFull)
avgStepsFull <- data.frame(avgOfSteps = with(activityFull, tapply(steps, list(interval, WeekdayFactor), mean)))
str(avgStepsFull)
avgStepsFull <- data.frame(avgOfSteps = with(activityFull, tapply(steps, list(WeekdayFactor, interval), mean)))
str(avgStepsFull)
head(avgStepsFull)
View(avgStepsFull)
avgStepsFull <- data.frame(avgOfSteps = with(activityFull, tapply(steps, list(WeekdayFactor, interval), mean)))
avgStepsFull <- data.frame(avgOfSteps = with(activityFull, tapply(steps, list(interval, WeekdayFactor), mean)))
row.names(avgStepsFull)
ggplot(data = avgStepsFull, aes(x = as.numeric(row.names(avgStepsFull)),
y = avgStepsFull[[1]])) +
geom_line() +
facet_grid(. ~ WeekdayFactor) +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
ggplot(data = avgStepsFull, aes(x = as.numeric(row.names(avgStepsFull)),
y = avgStepsFull[[1]])) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
avgStepsFull[[1]]
dim(avgStepsFull[[1]])
str(avgStepsFull[[1]])
str(avgStepsFull[[2]])
ggplot(data = avgStepsFull, aes(x = as.numeric(row.names(avgStepsFull)),
y = avgStepsFull) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
ggplot(data = avgStepsFull, aes(x = as.numeric(row.names(avgStepsFull)),
ggplot(data = avgStepsFull, aes(x = as.numeric(row.names(avgStepsFull)),
y = avgStepsFull)) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
str(avgStepsFull[1])
str(avgStepsFull[2])
str(avgStepsFull)
as.matrix(avgStepsFull)
ggplot(data = avgStepsFull, aes(x = as.numeric(row.names(avgStepsFull)),
y = as.matrix(avgStepsFull))) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, colour = drv)
avgStepsFull <- data.frame(avgOfSteps = with(activityFull, tapply(steps, list(interval, WeekdayFactor), mean)))
str(avgStepsFull)
melt(avgStepsFull)
?recast
melt(avgStepsFull)$variable
avgStepsFullPlot <- melt(avgStepsFull)
head(avgStepsFullPlot)
head(row.names(avgStepsFullPlot))
melt(avgStepsFull)$variable
head(avgStepsFull)
avgStepsFull$interval <- row.names(avgStepsFull)
avgStepsFull
?melt
melt(avgStepsFull)
avgStepsFullPlot <- melt(avgStepsFull)
head(avgStepsFullPlot)
head(avgStepsFullPlot$variable)
as.numeric(avgStepsFullPlot$variable)
levels(avgStepsFullPlot$variable)
levels(avgStepsFullPlot$variable) <- c("weekend", "weekday")
head(avgStepsFullPlot)
?ggplot
ggplot(data = avgStepsFullPlot, aes(x = interval,
y = value), facets = variable~.) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
ggplot(data = avgStepsFullPlot, aes(x = as.numeric(interval),
y = value), facets = variable~.) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
head(avgStepsFullPlot)
ggplot(data = avgStepsFullPlot, aes(x = as.numeric(interval),
y = value), facets = variable~.) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
qplot(hwy, data = mpg, facets = drv~.)
ggplot(data = avgStepsFullPlot, aes(x = as.numeric(interval),
y = value)) +
facet_grid(rows = variable) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
ggplot(data = avgStepsFullPlot, aes(x = as.numeric(interval),
y = value)) +
facet_grid(variable) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
ggplot(data = avgStepsFullPlot, aes(x = as.numeric(interval),
y = value)) +
facet_grid(avgStepsFullPlot$variable) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
ggplot(data = avgStepsFullPlot, aes(x = as.numeric(interval),
y = value)) +
facet_grid(rows = avgStepsFullPlot$variable) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
ggplot(data = avgStepsFullPlot, aes(x = as.numeric(interval),
y = value)) +
facet_grid(rows = vars(avgStepsFullPlot$variable)) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
ggplot(data = avgStepsFullPlot, aes(x = as.numeric(interval),
y = value)) +
facet_grid(rows = vars(variable)) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
ggplot(data = avgStepsFullPlot, aes(x = as.numeric(interval),
y = value)) +
geom_line() +
facet_grid(variable~.) +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache=TRUE)
options(scipen = 999, digits = 2)
if (!file.exists("./data")) {
dir.create("./data")
}
unzippedFile <- unzip("activity.zip", exdir = "./data")
activity <- read.csv(unzippedFile, header = TRUE, sep = ",", stringsAsFactors =
FALSE, na.strings = "NA", dec = ".")
sumSteps <- data.frame(sumOfSteps = with(activity, tapply(steps, date, sum)))
with(sumSteps, hist(sumOfSteps,
main = "Histogram of Total Number of Steps Taken Per Day (Unimputed)"))
meanTotalSteps <- mean(sumSteps[[1]], na.rm = TRUE)
medianTotalSteps <- median(sumSteps[[1]], na.rm = TRUE)
library(ggplot2)
library(dplyr)
library(reshape2)
library(knitr)
timeHHMM_formatter <- function(x){
h <- x %/% 100
m <- x %% 100
lab <- sprintf("%02d:%02d", h, m)
}
avgSteps <- data.frame(avgOfSteps = with(activity, tapply(steps, interval, mean, na.rm = TRUE)))
ggplot(data = avgSteps, aes(x = as.numeric(row.names(avgSteps)),
y = avgSteps[[1]])) +
geom_line() +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
maxStepsInterval <- timeHHMM_formatter(as.numeric(row.names(avgSteps)[which.max(avgSteps[[1]])]))
numMissing <- sum(is.na(activity$steps))
avgSteps$interval <- row.names(avgSteps)
activityFull <- merge(activity, avgSteps,
by = "interval",
all.x = TRUE)
naFilter <- is.na(activityFull$steps)
activityFull[naFilter, 2] <- activityFull[naFilter, 4]
activityFull <- activityFull[with(activityFull, order(date, interval)), c(2, 3, 1)]
sumStepsFull <- data.frame(sumOfSteps = with(activityFull, tapply(steps, date, sum)))
with(sumStepsFull, hist(sumOfSteps,
main = "Histogram of Total Number of Steps Taken Per Day (Imputed)"))
meanTotalStepsFull <- mean(sumStepsFull[[1]])
medianTotalStepsFull <- median(sumStepsFull[[1]])
activityFull$DayOfWeek <- weekdays(as.Date(activityFull$date), abbreviate = TRUE)
dayOfWeekLabels <- unique(activityFull$DayOfWeek)
weekdayLabels <- dayOfWeekLabels[1:5]
weekendLabels <- dayOfWeekLabels[6:7]
activityFull$Weekday <- activityFull$DayOfWeek %in% weekdayLabels
activityFull$WeekdayFactor <- factor(activityFull$Weekday, labels = c("weekend", "weekday"))
avgStepsFull <- data.frame(avgOfSteps = with(activityFull, tapply(steps, list(interval, WeekdayFactor), mean)))
avgStepsFull$interval <- row.names(avgStepsFull)
avgStepsFullPlot <- melt(avgStepsFull)
levels(avgStepsFullPlot$variable) <- c("weekend", "weekday")
ggplot(data = avgStepsFullPlot, aes(x = as.numeric(interval),
y = value)) +
geom_line() +
facet_grid(variable~.) +
ggtitle("Average Steps per 5-Min Interval") +
labs(x = "Time", y = "Average Steps") +
scale_x_continuous(labels = timeHHMM_formatter)
knit2html()
knit2html("PA1_template.Rmd")
